{
  #######
  # DATASET SAMPLING CONFIGURATION
  #######
  # For only considering images without control image:
  "dataset_path": "/home/magarcd/Escritorio/dataset/kvasir-dataset",

  #For the output and results of the program
  "output_path": "../output/dddgdfgsdgdfgfdgdfFFFFFFFg",


  #######
  # EXPERT USER FLAG
  # This flag allows the user to select if he/she is an expert user or not. If you are not a expert usert, the framework
  # automatically will select all the possible combinations to find the best one. If the user select false, he/she does not
  # have to select feature_extractors and model_classifiers .
  #######
  "expert":true,

  #######
  # ENSEMBLE FLAG
  # This flag allows the user the possibility of creating a model with several different models and feature extractors.
  # This technique called majority voting uses all the models generated to predict the class of the image. The framework
  # only saves the models that have a certain percentage of the measure chosen by the user. Then these models will be
  # trained to classify the images.
  #######
  "ensemble":false,

  #######
  # Batch CONFIGURATION
  #######
  "batch_size": 32,

  #######
  # MODEL CONFIGURATION
  # You can choose more than one model
  # Possible values for model are: ["vgg16", include_top], ["vgg19", include_top], ["resnet", include_top],
  # ["inception", include_top], ["googlenet"], ["overfeat", "[outputLayers]"], ["xception", include_top] (only with tensorflow),
  # and ["densenet"]
  # Shallow features: ["lab888"], ["lab444","4,4,4"], ["hsv888"], ["hsv444","4,4,4"], ["haralick"], ["lbp"], ["hog"], ["haarhog"]
  #######
  "feature_extractors" : [["vgg16", "False"], ["vgg19", "False"],["resnet", "False"], ["overfeat", "[-3]"]],
//["googlenet"], ["inception", "False"],["overfeat", "[-3]"],["resnet", "False"],["vgg16", "False"],["vgg19", "False"],["xception", "False"],
//        ["overfeat", [-3]], ["vgg16", "False"], ["vgg19", "False"], ["resnet", "False"],                                    , ["inception", "False"],["googlenet"], ["overfeat", "[-3]"],
//      ["xception", "False"], ["densenet"],["lab888"], ["lab444","4,4,4"], ["hsv888"], ["hsv444","4,4,4"], ["haralick"], ["hog"], ["haarhog"]

  #######
  # CLASSIFIER CONFIGURATION
  #######
  # You can choose more than one classifier model
  # Possible values for classifier model are: RandomForest, SVM, KNN, LogisticRegression, MLP and
  # GradientBoost
  "training_size": 1,
  "model_classifiers" : ["GradientBoost","RandomForest", "SVM","KNN","LogisticRegression", "MLP"],


  #Con knn parece que haralick tampoco funciona. probar con el peque√±o y faltan por probar los otros dos con el dataset real

  #######
  # MEASURE CONFIGURATION
  #######
  # You can choose one measure
  # Possible values for measures are: f1, accuracy, recall, precision, auroc
  "measure" : "accuracy",
  "n_steps" : 10
}